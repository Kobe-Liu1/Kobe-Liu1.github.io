<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>近期工作中的bug(第一弹)</title>
      <link href="/p/3391d39b.html"/>
      <url>/p/3391d39b.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="近期工作bug-第一弹"><a href="#近期工作bug-第一弹" class="headerlink" title="近期工作bug(第一弹)"></a>近期工作bug(第一弹)</h2><h3 id="将本地jar包导入到本地仓库，用于maven依赖"><a href="#将本地jar包导入到本地仓库，用于maven依赖" class="headerlink" title="将本地jar包导入到本地仓库，用于maven依赖:"></a>将本地jar包导入到本地仓库，用于maven依赖:</h3><pre><code>mvn install:install-file -Dfile=opentcs-api-base-4.18.0.jar -DgroupId=org.opentcs -DartifactId=opentcs-api-base -Dversion=4.18.0 -Dpackaging=jar</code></pre><h3 id="本地jar包加载到依赖，报错"><a href="#本地jar包加载到依赖，报错" class="headerlink" title="本地jar包加载到依赖，报错:"></a>本地jar包加载到依赖，报错:</h3><pre><code>Downloading from alimaven: http://maven.aliyun.com/nexus/content/groups/public/org/apache/maven/plugins/maven-clean-plugin/2.5/maven-clean-plugin-2.5.pom[WARNING] Failed to retrieve plugin descriptor for org.apache.maven.plugins:maven-clean-plugin:2.5: Plugin org.apache.maven.plugins:maven-clean-plugin:2.5 or one of its dependencies could not be resolved: Failed to read artifact descriptor for org.apache.maven.plugins:maven-clean-plugin:jar:2.5原因:maven库中的远程库下载不了需要的插件，这时候 添加 mirror如下，完成修改  &lt;mirror&gt;    &lt;id&gt;alimaven&lt;/id&gt;    &lt;name&gt;aliyun maven&lt;/name&gt;    &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;    &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;&lt;/mirror&gt;</code></pre><h3 id="JAXBException-occurred-意外的元素-uri-””-local-”msgCats”-。所需元素为-lt-Task-gt"><a href="#JAXBException-occurred-意外的元素-uri-””-local-”msgCats”-。所需元素为-lt-Task-gt" class="headerlink" title="JAXBException occurred : 意外的元素 (uri:””, local:”msgCats”)。所需元素为&lt;{}Task&gt;"></a>JAXBException occurred : 意外的元素 (uri:””, local:”msgCats”)。所需元素为&lt;{}Task&gt;</h3><pre><code>- 问题：webService在soapUI调试的时候，post方式在界面上写入一个json，然而server服务端并不能知道传过来的是什么，因为缺少一个id</code></pre><p>修改前传入的是:  </p><pre><code>{    &quot;msgCats&quot;: &quot;TaskRequest&quot;,    &quot;origin&quot;: &quot;1104&quot;,    &quot;dest&quot;: &quot;4120&quot;,    &quot;originParam&quot;: &quot;Load cargo&quot;,    &quot;estParam&quot;: &quot;Unload cargo&quot;,    &quot;taskId&quot;: &quot;1211&quot;}</code></pre><p>修改后:  </p><pre><code>{&quot;Task&quot;:    {    &quot;msgCats&quot;: &quot;TaskRequest&quot;,    &quot;origin&quot;: &quot;1104&quot;,    &quot;dest&quot;: &quot;4120&quot;,    &quot;originParam&quot;: &quot;Load cargo&quot;,    &quot;estParam&quot;: &quot;Unload cargo&quot;,    &quot;taskId&quot;: &quot;1211&quot;    }}</code></pre><p>之后还需要在那个对象上面加上：@XmlRootElement(name = “Task”)，以保证能找到将json转化为那个对象</p>]]></content>
      
      
      
        <tags>
            
            <tag> work </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭起来的第一天，谈谈遇到的坑</title>
      <link href="/p/50a38d4.html"/>
      <url>/p/50a38d4.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="博客搭起来的第一天，谈谈遇到的坑"><a href="#博客搭起来的第一天，谈谈遇到的坑" class="headerlink" title="博客搭起来的第一天，谈谈遇到的坑"></a>博客搭起来的第一天，谈谈遇到的坑</h2><h3 id="搭建原生hexo时报错"><a href="#搭建原生hexo时报错" class="headerlink" title="搭建原生hexo时报错"></a>搭建原生hexo时报错</h3><p>Error: your blog file is still not created, please check it yourself  </p><ul><li>原因：我的原因呢是因为在配置nodejs时，需要新建两个新的文件夹，在设置环境变量的时候设置错了  </li></ul><h3 id="修改代码之后却不能传到github-gitee-coding上"><a href="#修改代码之后却不能传到github-gitee-coding上" class="headerlink" title="修改代码之后却不能传到github/gitee/coding上"></a>修改代码之后却不能传到github/gitee/coding上</h3><ul><li>首先需要确认在根博客目录的yml文件上地址绑定正确，这里给个例子： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deploy:  </span><br><span class="line"><span class="built_in">type</span>: git  </span><br><span class="line">repo:   </span><br><span class="line">github: git@github.com:username/username.github.io.git</span><br><span class="line">gitee: git@gitee.com:username/username.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure></li><li>之后进行hexo三部曲  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean  <span class="comment"># 除缓存文件 (db.json) 和已生成的静态文件 (public)</span></span><br><span class="line">$ hexo g <span class="comment"># 生成静态文件</span></span><br><span class="line">$ hexo d <span class="comment"># 上传到云库上</span></span><br></pre></td></tr></table></figure>还有一个hexo s 是在本地预览，默认端口是4000，其他端口是：-p port</li></ul><h3 id="上传到gitee，不刷新界面"><a href="#上传到gitee，不刷新界面" class="headerlink" title="上传到gitee，不刷新界面"></a>上传到gitee，不刷新界面</h3><ul><li>因为gitee需要你手动去刷新page，需要你自己去服务里点 gitee pages，手动刷新界面，愿意花钱当我没说</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
